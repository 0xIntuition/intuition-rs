apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-kompose.yml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api
  template:
    metadata:
      labels:
        io.kompose.service: api
    spec:
      volumes:
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: aws-secrets
      containers:
      - name: api
        image: ghcr.io/0xintuition/image-guard:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        - name: API_PORT
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: API_PORT
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: DATABASE_URL
        - name: FLAG_LOCAL_WITH_CLASSIFICATION
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: FLAG_LOCAL_WITH_CLASSIFICATION
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: HF_TOKEN
        - name: IPFS_GATEWAY_URL
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: IPFS_GATEWAY_URL
        - name: IPFS_UPLOAD_URL
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: IPFS_UPLOAD_URL
        - name: PINATA_API_JWT
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: PINATA_API_JWT
        - name: RUST_LOG
          value: info
        volumeMounts:
          - name: secrets-store
            mountPath: "/mnt/secrets"
            readOnly: true
      restartPolicy: Always
