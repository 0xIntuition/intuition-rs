apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-kompose.yml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: graphql-engine
  name: graphql-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: graphql-engine
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-kompose.yml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: graphql-engine
    spec:
      containers:
        - env:
            - name: HASURA_GRAPHQL_ADMIN_SECRET
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: HASURA_GRAPHQL_ADMIN_SECRET
            - name: HASURA_GRAPHQL_DEV_MODE
              value: "true"
            - name: HASURA_GRAPHQL_ENABLED_LOG_TYPES
              value: startup, http-log, webhook-log, websocket-log, query-log
            - name: HASURA_GRAPHQL_ENABLE_CONSOLE
              value: "true"
            - name: HASURA_GRAPHQL_METADATA_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: DATABASE_URL
            - name: HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES
              value: "true"
            - name: HASURA_GRAPHQL_UNAUTHORIZED_ROLE
              value: anonymous
            - name: PINATA_AUTH
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: PINATA_API_JWT
          image: hasura/graphql-engine:v2.44.0
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:8080/healthz
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 10
          name: graphql-engine
          ports:
            - containerPort: 8080
              protocol: TCP
      restartPolicy: Always
