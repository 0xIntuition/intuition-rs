name: Release and Publish

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  RUST_VERSION: 1.81.0

jobs:
  setup:
    runs-on: self-hosted
    permissions:
      contents: read
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Extract metadata
        id: meta
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

  build-consumer:
    runs-on: self-hosted
    needs: setup
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4

  build-image-guard:
    runs-on: self-hosted
    needs: setup
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: image-guard/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/0xintuition/image-guard:${{ needs.setup.outputs.version }}
            ${{ env.REGISTRY }}/0xintuition/image-guard:latest
          build-args: |
            RUST_VERSION=${{ env.RUST_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-substreams-sink:
    runs-on: self-hosted
    needs: setup
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: substreams-sink/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/0xintuition/substreams-sink:${{ needs.setup.outputs.version }}
            ${{ env.REGISTRY }}/0xintuition/substreams-sink:latest
          build-args: |
            RUST_VERSION=${{ env.RUST_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-hasura-migrations:
    runs-on: self-hosted
    needs: setup
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: hasura/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/0xintuition/hasura-migrations:${{ needs.setup.outputs.version }}
            ${{ env.REGISTRY }}/0xintuition/hasura-migrations:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-cli:
    runs-on: self-hosted
    needs: setup
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: cli/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/0xintuition/cli:${{ needs.setup.outputs.version }}
            ${{ env.REGISTRY }}/0xintuition/cli:latest
          build-args: |
            RUST_VERSION=${{ env.RUST_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-envio-indexer:
    runs-on: self-hosted
    needs: setup
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: envio-indexer/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/0xintuition/envio-indexer:${{ needs.setup.outputs.version }}
            ${{ env.REGISTRY }}/0xintuition/envio-indexer:latest
          build-args: |
            RUST_VERSION=${{ env.RUST_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-indexer-migrations:
    runs-on: self-hosted
    needs: setup
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: indexer-and-cache-migrations/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/0xintuition/indexer-and-cache-migrations:${{ needs.setup.outputs.version }}
            ${{ env.REGISTRY }}/0xintuition/indexer-and-cache-migrations:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-histoflux:
    runs-on: self-hosted
    needs: setup
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: histoflux/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/0xintuition/histoflux:${{ needs.setup.outputs.version }}
            ${{ env.REGISTRY }}/0xintuition/histoflux:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-rpc-proxy:
    runs-on: self-hosted
    needs: setup
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: rpc-proxy/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/0xintuition/rpc-proxy:${{ needs.setup.outputs.version }}
            ${{ env.REGISTRY }}/0xintuition/rpc-proxy:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-histocrawler:
    runs-on: self-hosted
    needs: setup
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: histocrawler/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/0xintuition/histocrawler:${{ needs.setup.outputs.version }}
            ${{ env.REGISTRY }}/0xintuition/histocrawler:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    needs: [
      build-consumer,
      build-image-guard,
      build-substreams-sink,
      build-hasura-migrations,
      build-cli,
      build-envio-indexer,
      build-indexer-migrations,
      build-histoflux,
      build-rpc-proxy,
      build-histocrawler
    ]
    runs-on: self-hosted
    permissions:
      contents: write
      packages: read
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ needs.setup.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

