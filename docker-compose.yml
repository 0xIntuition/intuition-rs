networks:
  intuition-be:
    driver: bridge

services:
  enstate:
    image: ghcr.io/v3xlabs/enstate:1.0.7-9
    ports:
      - 3000:3000
    environment:
      - REDIS_URL=redis://redis:6379
      - RPC_URL=https://eth-mainnet.g.alchemy.com/v2/qqDU-DK2v3BXXNVwrIs4oECQXQMPKXW0
      - OPENSEA_API_KEY=
      - UNIVERSAL_RESOLVER=0x74E20Bd2A1fE0cdbe45b9A1d89cb7e0a45b36376
    depends_on:
      - redis
  redis:
    image: redis:6.2.5-alpine
    ports:
        - 6379:6379
  database:
    container_name: database
    image: postgres
    environment:
      POSTGRES_USER: $PG_USER
      POSTGRES_PASSWORD: $PG_PASSWORD
      POSTGRES_DB: $PG_DB
    volumes:
      - database-data:/var/lib/postgresql/data/
    ports:
      - ${PG_PORT}:5432
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  
  decoded_consumer:
    container_name: decoded_consumer
    image: consumer:latest
    command: ./consumer --mode decoded
    env_file:
      - .env.sample.docker

    depends_on:
      sqs:
        condition: service_healthy
    volumes:
      - ~/.aws/:/root/.aws:ro

  raw_consumer:
    container_name: raw_consumer
    image: consumer:latest
    command: ./consumer --mode raw
    env_file:
      - .env.sample.docker

    depends_on:
      sqs:
        condition: service_healthy
    volumes:
      - ~/.aws/:/root/.aws:ro
  sqs:
    container_name: sqs
    image: localstack/localstack:latest
    ports:
      - "127.0.0.1:53:53"
      # - "127.0.0.1:53:53/udp"
      - "127.0.0.1:443:443"
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4571:4571"
    volumes:
      - ./consumer/devops/localstack-setup.sh:/etc/localstack/init/ready.d/script.sh
    environment:
    # Set an env var to use later in the code
      - AWS_ENDPOINT=http://localstack:4566
      - EXTRA_CORS_ALLOWED_ORIGINS=app://.
      - ALLOW_NONSTANDARD_REGIONS=1
      - SERVICES=sqs
      - DEBUG=1
      - DOCKER_HOST=0.0.0.0
      - HOSTNAME_EXTERNAL=localstack
      - AWS_DEFAULT_REGION=us-east-1

  graphql-engine:
    container_name: graphql-engine
    image: hasura/graphql-engine:v2.44.0
    ports:
      - '8080:8080'
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://testuser:test@database:5432/storage
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: 'anonymous'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: $HASURA_GRAPHQL_ADMIN_SECRET
      HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES: 'true'


volumes:
  sqs:
  raw_consumer:
  decoded_consumer:
  database-data:
  pgadmin-data:
